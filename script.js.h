// converted from script.js using file_to_char.py by etyloppihacilem.
// https://github.com/etyloppihacilem/file_to_char

#pragma once
#ifndef SCRIPT_JS_H
#define SCRIPT_JS_H

static const char script_js_h[] = "var heart = document.getElementById(\"heart\");\n"
"var display = document.getElementById(\"display\");\n"
"\n"
"var pulse_data = [];\n"
"var last = \"0\";\n"
"var bpm = 0;\n"
"var pulse_us;\n"
"var pulse_ms;\n"
"\n"
"heart.style.setProperty('--time',pulse_ms + \"ms\");\n"
"heart.addEventListener(\"animationiteration\", function(){\n"
"    heart.style.setProperty('animation-duration', pulse_ms + \"ms\");\n"
"});\n"
"\n"
"var error_count = 0;\n"
"\n"
"var id_socket = window.setInterval(() => {\n"
"    fetch('/data.json'.concat(\"?last=\", last))\n"
"        .then( response => response.json() )\n"
"        .then( response => {\n"
"            error_count = 0;\n"
"            pulse_data.push(...response);\n"
"            pulse_data.sort(function(a, b) {\n"
"                return a - b;\n"
"            });;\n"
"            last = pulse_data[pulse_data.length - 1];\n"
"            if (pulse_data.length >= 3) {\n"
"                heart.classList.add('pulse');\n"
"                heart.classList.remove('deactivated');\n"
"                heart.classList.add('activated');\n"
"                pulse_us = (((pulse_data[pulse_data.length - 1] - pulse_data[pulse_data.length - 2]) + (pulse_data[pulse_data.length - 2] - pulse_data[pulse_data.length - 3])) / 2)\n"
"                bpm = 60000000 / pulse_us;\n"
"                pulse_ms = pulse_us / 1000;\n"
"                display.innerHTML = Math.round(bpm) + \" Bpm\";\n"
"            }else {\n"
"                heart.classList.remove('pulse');\n"
"                heart.classList.add('deactivated');\n"
"                heart.classList.remove('activated');\n"
"                display.innerHTML = \"___ Bpm\";\n"
"            }\n"
"        })\n"
"        .catch(error => {\n"
"            error_count += 1;\n"
"            if (error_count > 1) {\n"
"                window.clearInterval(id_socket);\n"
"                console.log(\"Too many error, stopping now.\");\n"
"            }\n"
"            heart.classList.remove('pulse');\n"
"            heart.classList.add('deactivated');\n"
"            heart.classList.remove('activated');\n"
"            display.innerHTML = \"___ Bpm\";\n"
"            throw (error);\n"
"            });\n"
"}, 1000);\n"
"\n"
"\n"
"var graph = document.getElementById('graph');\n"
"var c = graph.getContext('2d');\n"
"const c_width = graph.getBoundingClientRect().width;\n"
"const c_height = graph.getBoundingClientRect().height;\n"
"const w_it = c_width / 60;\n"
"var graph_data = [];\n"
"\n"
"var id_graph = window.setInterval(() => {\n"
"    c.clearRect(0, 0, c_width, c_height);\n"
"    c.lineWidth = 1;\n"
"    c.strokeStyle = '#ff0000';\n"
"    c.font = 'italic 8pt sans-serif';\n"
"    c.textAlign = \"center\";\n"
"    graph_data.push(bpm);\n"
"    while (graph_data.length > 60)\n"
"        graph_data.shift();\n"
"    var max = Math.max(...graph_data);\n"
"    c.beginPath();\n"
"    c.moveTo(0, c_height - (graph_data[0] / max) * c_height);\n"
"    for (var i = 1; i < graph_data.length; i++) {\n"
"        c.lineTo(i * w_it, c_height - (graph_data[i] / max) * c_height);\n"
"    }\n"
"    c.stroke();\n"
"}, 1000);\n"
"\n"
"";

#endif